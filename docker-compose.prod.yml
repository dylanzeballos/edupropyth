version: "3.8"

services:
  db:
    image: postgres:16-alpine
    container_name: edupropyth-db-prod
    restart: always
    environment:
      POSTGRES_DB: ${DB_DATABASE:-edupropyth_prod}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - edupropyth-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

  backend:
    image: ghcr.io/${GITHUB_REPOSITORY:-your-username/edupropyth}-backend:latest
    container_name: edupropyth-backend-prod
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000

      # Database
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE:-edupropyth_prod}
      - DB_SYNCHRONIZE=false
      - DB_LOGGING=false

      # JWT
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-1h}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION:-7d}

      # OAuth - Google
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}

      # OAuth - GitHub
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_CALLBACK_URL=${GITHUB_CALLBACK_URL}

      # Frontend URL
      - FRONTEND_URL=${FRONTEND_URL:-https://edupropyth.com}

      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}

      # Logging & Monitoring
      - LOG_LEVEL=${LOG_LEVEL:-warn}
      - SENTRY_DSN=${SENTRY_DSN}
      - SENTRY_ENVIRONMENT=production

      # CORS
      - CORS_ORIGIN=${FRONTEND_URL:-https://edupropyth.com}

      # Rate Limiting
      - RATE_LIMIT_TTL=60
      - RATE_LIMIT_MAX=100

      # File Upload
      - MAX_FILE_SIZE=10485760
      - UPLOAD_DEST=/app/uploads

    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - edupropyth-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  frontend:
    image: ghcr.io/${GITHUB_REPOSITORY:-your-username/edupropyth}-frontend:latest
    container_name: edupropyth-frontend-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - edupropyth-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

  redis:
    image: redis:7-alpine
    container_name: edupropyth-redis-prod
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data_prod:/data
    networks:
      - edupropyth-network
    healthcheck:
      test: ["CMD", "redis-cli", "--pass", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # Backup service
  backup:
    image: postgres:16-alpine
    container_name: edupropyth-backup
    restart: "no"
    environment:
      - PGHOST=db
      - PGPORT=5432
      - PGUSER=${DB_USERNAME:-postgres}
      - PGPASSWORD=${DB_PASSWORD}
      - PGDATABASE=${DB_DATABASE:-edupropyth_prod}
      - BACKUP_RETENTION_DAYS=30
    volumes:
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh
    networks:
      - edupropyth-network
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - maintenance

  # Database monitoring (optional)
  pg-monitor:
    image: prom/postgres-exporter:latest
    container_name: edupropyth-pg-monitor
    restart: always
    environment:
      - DATA_SOURCE_NAME=postgresql://${DB_USERNAME:-postgres}:${DB_PASSWORD}@db:5432/${DB_DATABASE:-edupropyth_prod}?sslmode=disable
    ports:
      - "9187:9187"
    networks:
      - edupropyth-network
    depends_on:
      - db
    profiles:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

networks:
  edupropyth-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  postgres_data_prod:
    driver: local
  redis_data_prod:
    driver: local
  backend_uploads:
    driver: local
